install.packages("mice", dependencies = FALSE)
# Author: Francisco Rios
# Purpose: Set up R for prepping UW PHI Vaccination Data
# Date: Last modified September 20, 2021
# Load required packages -----
library(data.table)
library(ggplot2)
library(readxl)
library(tidyverse)
# Define important variables -----
# set shared team Google drive and code repo dynamically
if (Sys.info()[2]=='10 x64'){
g_drive  <- 'G:/.shortcut-targets-by-id/1P7ITMVB9x01fuYfHW8-uWogw4SpbuvwO/Merck Vaccine Improvement Index Project/'
code_dir <- 'C:/Users/frc2/Documents/uw-phi-vax/'
} else if (Sys.info()[2]=='Server x64'){
g_drive  <- 'G:/Shared with Me/Merck Vaccine Improvement Index Project/'
code_dir <- 'H:/uw-phi-vax/'
} else {
g_drive  <- '/Volumes/GoogleDrive/.shortcut-targets-by-id/1P7ITMVB9x01fuYfHW8-uWogw4SpbuvwO/Merck Vaccine Improvement Index Project/'
code_dir <- '~/Documents/uw-phi-vax/'
}
setwd(code_dir) # set the working directory to wherever code is stored
raw_data_dir <- paste0(g_drive,"Data/raw_data/") # location of raw data
prepped_data_dir <- paste0(g_drive,"Data/prepped_data/") # location of prepped data
codebook_directory <- paste0(g_drive,"Data/documentation/codebooks/") # location of codebooks for interpreting data
resDir <- paste0(g_drive, "Results/") # location of  any result outputs
visDir <- paste0(g_drive,"Visualizations/") # location where visualizations are saved
# Load prepped and merged data
dt <- read_rds(paste0(prepped_data_dir, "aim_2/12_merged_dataset.RDS"))
# Load prepped and merged data
dt <- read_rds(paste0(prepped_data_dir, "aim_2/12_merged_dataset.RDS"))
# Load prepped and merged data
dt <- read_rds(paste0(prepped_data_dir, "aim_2/12_merged_dataset.RDS"))
# subset data to specific time frame
dt1 <- dt %>% filter(year < 2020 & year > 1990)
View(dt1)
summary(dt1)
# impute missing values
library(mice)
md.pattern(dt1)
install.packages("VIM", dependencies = FALSE)
library(VIM)
install.packages("e1071", dependencies = FALSE)
library(VIM)
install.packages("proxy", dependencies = FALSE)
library(VIM)
install.packages("robustbase", dependencies = FALSE)
library(VIM)
install.packages("DEoptimR", dependencies = FALSE)
library(VIM)
install.packages("sp", dependencies = FALSE)
library(VIM)
install.packages("car", dependencies = FALSE)
library(VIM)
install.packages("carData", dependencies = FALSE)
library(VIM)
install.packages("laeken", dependencies = FALSE)
library(VIM)
install.packages("ranger", dependencies = FALSE)
library(VIM)
install.packages("vcd", dependencies = FALSE)
library(VIM)
install.packages("lmtest", dependencies = FALSE)
library(VIM)
# investigate missingness
mice_plot <- aggr(dt1, col=c('navyblue', 'yellow'),
numbers=TRUE, sortVars=TRUE)
# ensure all variables have a complete time series
imputed_Data <- mice(dt1, m=5, maxit = 50, method = pmm, seed = 500)
# ensure all variables have a complete time series
imputed_Data <- mice(dt1, m=5, maxit = 50, method = 'pmm', seed = 500)
summary(imputed_Data)
imputed_Data$imp$perc_skil_attend
# combine all five imputations into one model
combined_Data <- pool(fit)
View(imputed_Data)
View(dt1)
hist(imputed_Data$imp$nch_cnv_dah_20)
str(imputed_Data$imp$nch_cnv_dah_20)
# get first completed dataset to observe trends
completedData <- compelte(imputed_Data, 1)
# get first completed dataset to observe trends
completedData <- complete(imputed_Data, 1)
hist(completedData$nch_cnv_dah_20)
# save copy of untransformed data
untransformed <- copy(imputed_Data)
names(completedData)
# refers to variables that are proportions
complVars = c('perc_skil_attend',
'imm_pop_perc', 'perc_urban', 'prim_school_complt')
# transform completeness variables using approximation of logit that allows 1's and 0's
# (Smithson et al 2006 Psychological methods "A better lemon squeezer")
smithsonTransform = function(x) {
N=length( x[!is.na(x)] )
logit(((x*(N-1))+0.5)/N)
}
for(v in complVars) {
# data[get(v)>1, (v):=1]
# data[, (v):=smithsonTransform(get(v))]
with(imputed_Data, imputed_data[get(v)>1, (v):=1])
with(imputed_Data, data[, (v):=smithsonTransform(get(v))])
}
for(v in complVars) {
# data[get(v)>1, (v):=1]
# data[, (v):=smithsonTransform(get(v))]
with(imputed_Data, imputed_Data[get(v)>1, (v):=1])
with(imputed_Data, data[, (v):=smithsonTransform(get(v))])
}
completedData <- as.data.table(completedData)
for(v in complVars) {
completedData[get(v)>1, (v):=1]
completedData[, (v):=smithsonTransform(get(v))]
}
# transform completeness variables using approximation of logit that allows 1's and 0's
# (Smithson et al 2006 Psychological methods "A better lemon squeezer")
smithsonTransform = function(x) {
N=length( x[!is.na(x)] )
logit(((x*(N-1))+0.5)/N)
}
for(v in complVars) {
completedData[get(v)>1, (v):=1]
completedData[, (v):=smithsonTransform(get(v))]
}
logit()
logit(3)
logit(.22)
library(car)
logit(3)
# transform completeness variables using approximation of logit that allows 1's and 0's
# (Smithson et al 2006 Psychological methods "A better lemon squeezer")
smithsonTransform = function(x) {
N=length( x[!is.na(x)] )
logit(((x*(N-1))+0.5)/N)
}
for(v in complVars) {
completedData[get(v)>1, (v):=1]
completedData[, (v):=smithsonTransform(get(v))]
}
View(completedData)
hist(perc_skil_attend)
hist(completedData$perc_skil_attend)
hist(completedData$imm_pop_perc)
hist(completedData$perc_urban)
summary(completedData$perc_skil_attend)
