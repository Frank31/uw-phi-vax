source(paste0(code_dir, "functions/", "prep_dx_trend_data.R"))
source(paste0(code_dir, "functions/", "strip_chars.R"), encoding = "UTF-8")
###############################
# set Boolean switches
##############################
prep_vax_trends = FALSE
prep_sdi = FALSE
prep_dx_trends = TRUE
merge_files = TRUE
################################
#
################################
# ---------------------------------------
# Prep vaccination trends data
# ---------------------------------------
if(prep_vax_trends == TRUE){
source('./2a_prep_vaccination_trend_data.R')
}
# ---------------------------------------
# Prep SDI data
# ---------------------------------------
if(prep_sdi == TRUE){
source('./2b_prep_sdi_data.R')
}
# ---------------------------------------
# Prep disease trends data
# ---------------------------------------
if(prep_dx_trends == TRUE){
source('./2c_prep_disease_data.R')
}
# ---------------------------------------
# Merge major data sets together
# ---------------------------------------
if(merge_files == TRUE){
source('./3_merge_data.R')
}
# ---------------------------------------
# Exploratory graphs etc
# ---------------------------------------
# ---------------------------------------
# Run models
# ---------------------------------------
# load data
data = readRDS(outputFile3)
# subset data to include only values of Vaccine coverage between 2014-2019
dt2 <- data[year_id %in% c('2014', '2019')]
# subset to only low-SDI countries
dt2 <- dt2[sdi_group=="low"]
View(dt2)
unique(dt2$sdi_group)
unique(dt2$location_name)
names(dt2)
# # temporary fix remove the unnecessary columns
dt2 <- dt2[,c("location_name", "year_id", "vaccine_name", "val")]
# reshape data from long to wide
dt3 <- dcast(dt2, location_name + vaccine_name ~ year_id, value.var = c("val"))
# calculate percent change for each country
dt3[, percent_change := ((val_2019-val_2014)/val_2014)*100]
View(dt3)
# calculate percent change for each country
dt3[, percent_change := ((`2019`-`2014`)/`2014`)*100]
View(dt3)
# # plot two values against each other
# plot(dt3$val_2014, dt3$val_2019)
# ggplot(dt3, aes(x=val_2014, y=val_2019, color=vaccine_name)) +
#   geom_point()+
#   facet_wrap(~vaccine_name) +
# # label points above a certain point
#   geom_text(aes(label=ifelse(val_2019>.75 & val_2014<0.75,as.character(location_name),'')),hjust=0,vjust=0)
#
# # make table among low SDI countries
# # ggplot(dt3, aes(location_name, vaccine_name, color = vaccine_name, size= percent_change)) + geom_point() + theme_classic()
ggplot(dt3, aes(vaccine_name, location_name, fill= percent_change)) + geom_tile() + theme_bw()
# plot distribution of percent change
ggplot(dt3, aes(x=percent_change)) + geom_histogram()
# # plot two values against each other
# plot(dt3$val_2014, dt3$val_2019)
# ggplot(dt3, aes(x=val_2014, y=val_2019, color=vaccine_name)) +
#   geom_point()+
#   facet_wrap(~vaccine_name) +
# # label points above a certain point
#   geom_text(aes(label=ifelse(val_2019>.75 & val_2014<0.75,as.character(location_name),'')),hjust=0,vjust=0)
#
# # make table among low SDI countries
# # ggplot(dt3, aes(location_name, vaccine_name, color = vaccine_name, size= percent_change)) + geom_point() + theme_classic()
ggplot(dt3, aes(vaccine_name, location_name, fill= percent_change)) + geom_tile() + theme_bw()
# plot distribution of percent change
ggplot(dt3, aes(x=percent_change)) + geom_histogram()+
facet_wrap(~vaccine_name)
ggplot(dt3, aes(x=percent_change)) + geom_boxplot()+
facet_wrap(~vaccine_name)
# create a function to spot outliers in data
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
is_outlier(dt3$percent_change)
# remove locations without a real number
dt3 <- dt3[!is.na(percent_change)]
View(dt3)
dt3 <- dt3[!is.infinite(percent_change)]
# create a function to spot outliers in data
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
is_outlier(dt3$percent_change)
library(dplyr)
# plot distribution of percent change
ggplot(dt3, aes(x=percent_change)) + geom_histogram()+
facet_wrap(~vaccine_name)
dt3 %>%
group_by(vaccine_name) %>%
mutate(outlier = ifelse(is_outlier(percent_change), percent_change, as.numeric(NA))) %>%
ggplot(., aes(x = percent_change)) +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)
dt3 %>%
group_by(vaccine_name) %>%
mutate(outlier = ifelse(is_outlier(percent_change), percent_change, as.numeric(NA))) %>%
ggplot(., aes(x = percent_change), y=vaccine_name) +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)
rlang::last_error()
dt3 %>%
group_by(vaccine_name) %>%
mutate(outlier = ifelse(is_outlier(percent_change), percent_change, as.numeric(NA))) %>%
ggplot(., aes(x = percent_change)) +
# geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)
dt3 %>%
group_by(vaccine_name) %>%
mutate(outlier = ifelse(is_outlier(percent_change), percent_change, as.numeric(NA))) %>%
ggplot(., aes(x = percent_change))
# geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)
dt3 %>%
mutate(outlier = ifelse(is_outlier(percent_change), percent_change, as.numeric(NA))) %>%
ggplot(., aes(x = percent_change))
# geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)
dt3 %>%
mutate(outlier = ifelse(is_outlier(percent_change), percent_change, as.numeric(NA))) %>%
ggplot(., aes(x = percent_change))+
geom_histogram()
# geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)
dt3 %>%
mutate(outlier = ifelse(is_outlier(percent_change), percent_change, as.numeric(NA))) %>%
ggplot(., aes(x = percent_change))+
geom_histogram()+
facet_wrap(~vaccine_name)
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)
dt3 %>%
mutate(outlier = ifelse(is_outlier(percent_change), percent_change, as.numeric(NA))) %>%
ggplot(., aes(x = percent_change))+
geom_histogram()+
facet_wrap(~vaccine_name)+
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)
dt3 %>%
group_by(vaccine_name) %>%
mutate(outlier = ifelse(is_outlier(percent_change), percent_change, as.numeric(NA))) %>%
ggplot(., aes(x = factor(vaccine_name), y = percent_change)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)
library(tibble)
dat <- dt3 %>% tibble::rownames_to_column(var="outlier") %>% group_by(vaccine_name) %>% mutate(is_outlier=ifelse(is_outlier(percent_change), percent_change, as.numeric(NA)))
dat$outlier[which(is.na(dat$is_outlier))] <- as.numeric(NA)
ggplot(dat, aes(y=percent_change, x=factor(vaccine_name))) + geom_boxplot() + geom_text(aes(label=outlier),na.rm=TRUE,nudge_y=0.05)
View(dat)
View(dt3)
dt3 %>%
group_by(vaccine_name) %>%
mutate(outlier = ifelse(is_outlier(percent_change), percent_change, as.numeric(NA))) %>%
ggplot(., aes(x = factor(vaccine_name), y = percent_change)) +
geom_boxplot() +
geom_text(aes(label = location_name), na.rm = TRUE, hjust = -0.3)
dt3 %>%
group_by(vaccine_name) %>%
mutate(outlier = ifelse(is_outlier(percent_change), percent_change, as.numeric(NA))) %>%
ggplot(., aes(x = factor(vaccine_name), y = percent_change)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)
dt3 %>%
group_by(vaccine_name) %>%
mutate(outlier = ifelse(is_outlier(percent_change), percent_change, as.numeric(NA))) %>%
ggplot(., aes(x = factor(vaccine_name), y = percent_change)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
facet_wrap(~vaccine_name)
View(dat)
View(dt3)
rm(list=ls())
# Author: Francisco Rios
# Purpose: Set up R for prepping UW PHI Vaccination Data
# Date: Last modified July 12, 2021
# Manually set the working directory
###############################
# load required packages
###############################
library(data.table)
library(ggplot2)
library(readxl)
library(GGally)
library(dplyr)
library(tibble)
###############################
# important variables
###############################
shared_data_dir <- "G:/.shortcut-targets-by-id/1P7ITMVB9x01fuYfHW8-uWogw4SpbuvwO/Merck Vaccine Improvement Index Project/Data/"
local_data_dir <- "G:/My Drive/PHI/local_data/"
prepped_data_dir <- "G:/My Drive/PHI/local_data/prepped_data/"
code_dir <- "./"
codebook_directory <- paste0(local_data_dir,"/codebooks/")
visDir <- paste0("G:/My Drive/PHI/visualizations/")
###############################
# output files
###############################
outputFile2a = paste0(prepped_data_dir, "2a_vaccine_trends.RDS")
outputFile2b = paste0(prepped_data_dir, "2b_sdi.RDS")
outputFile2c = paste0(prepped_data_dir, "2c_disease_trends.RDS")
outputFile3 = paste0(prepped_data_dir, "3a_merged_data.RDS")
outputFile4 = paste0(visDir, "aim1_sample_visualizations.PDF")
outputFile4b = paste0(visDir, "aim1_sample_country_trends.PDF")
###############################
# source shared functions
###############################
source(paste0(code_dir, "functions/", "prep_vax_trend_data.R"))
source(paste0(code_dir, "functions/", "prep_dx_trend_data.R"))
source(paste0(code_dir, "functions/", "strip_chars.R"), encoding = "UTF-8")
###############################
# set Boolean switches
##############################
prep_vax_trends = FALSE
prep_sdi = FALSE
prep_dx_trends = TRUE
merge_files = TRUE
# Author: Francisco Rios
# Purpose: calculate observed percent change for all countries and locations
# Date: Last modified July 13, 2021
# load data
data = readRDS(outputFile3)
# subset data to include only values of Vaccine coverage between 2014-2019
dt2 <- data[year_id %in% c('2014', '2019')]
# subset to only low-SDI countries
dt2 <- dt2[sdi_group=="low"]
# # temporary fix remove the unnecessary columns
dt2 <- dt2[,c("location_name", "year_id", "vaccine_name", "val")]
# reshape data from long to wide
dt3 <- dcast(dt2, location_name + vaccine_name ~ year_id, value.var = c("val"))
# calculate percent change for each country
dt3[, percent_change := ((`2019`-`2014`)/`2014`)*100]
# remove locations without a real number
dt3 <- dt3[!is.na(percent_change)]
dt3 <- dt3[!is.infinite(percent_change)]
# create a function to spot outliers in data
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
dt3 %>%
group_by(vaccine_name) %>%
mutate(outlier = ifelse(is_outlier(percent_change), location_name, as.numeric(NA))) %>%
ggplot(., aes(x = factor(vaccine_name), y = percent_change)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)
# create a function to spot outliers in data
is_outlier <- function(x) {
return(x > quantile(x, 0.75) + 1.5 * IQR(x))
}
dt3 %>%
group_by(vaccine_name) %>%
mutate(outlier = ifelse(is_outlier(percent_change), location_name, as.numeric(NA))) %>%
ggplot(., aes(x = factor(vaccine_name), y = percent_change)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)
vaccines = unique(dt3$vaccine_name)
vaccines
length(vaccines)
for (i in 1:length(vaccines)) {
dt3 %>%
filter(vaccine_name == vaccines[i]) %>%
group_by(vaccine_name) %>%
mutate(outlier = ifelse(is_outlier(percent_change), location_name, as.numeric(NA))) %>%
g <- ggplot(., aes(x = factor(vaccine_name), y = percent_change)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)
print(g)
}
for (i in 1:length(vaccines)) {
dt3 %>%
filter(vaccine_name == vaccines[i]) %>%
mutate(outlier = ifelse(is_outlier(percent_change), location_name, as.numeric(NA))) %>%
g <- ggplot(., aes(x = factor(vaccine_name), y = percent_change)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)
print(g)
}
for (i in 1:length(vaccines)) {
dt3 %>%
filter(vaccine_name == vaccines[i]) %>%
mutate(outlier = ifelse(is_outlier(percent_change), location_name, as.numeric(NA))) %>%
g <- ggplot(dt3, aes(x = factor(vaccine_name), y = percent_change)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)
print(g)
}
dt3[outlier:=ifelse(is_outlier(percent_change), location_name, as.numeric(NA))]
dt3[,outlier:=ifelse(is_outlier(percent_change), location_name, as.numeric(NA))]
View(dt3)
dt3[,outlier:=ifelse(is_outlier(percent_change), location_name, as.numeric(NA)), by=.(vaccine_name)]
View(dt3)
for (i in 1:length(vaccines)) {
g <- ggplot(dt3[vaccin_name==vaccines[i]], aes(x = factor(vaccine_name), y = percent_change)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)
print(g)
}
for (i in 1:length(vaccines)) {
g <- ggplot(dt3[vaccine_name==vaccines[i]], aes(x = factor(vaccine_name), y = percent_change)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)
print(g)
}
dt3[,outlier:=ifelse(is_outlier(percent_change), TRUE, as.numeric(NA)), by=.(vaccine_name)]
View(dt3)
dt3[,outlier:=ifelse(is_outlier(percent_change), "TRUE", as.numeric(NA)), by=.(vaccine_name)]
View(dt3)
str(dt3)
for (i in 1:length(vaccines)) {
g <- ggplot(dt3[vaccine_name==vaccines[i]], aes(x = factor(vaccine_name), y = percent_change)) +
geom_boxplot() +
geom_text(aes(label = location_name), na.rm = TRUE, hjust = -0.3)
print(g)
}
dt3[,outlier:=ifelse(is_outlier(percent_change), location_name, as.numeric(NA)), by=.(vaccine_name)]
for (i in 1:length(vaccines)) {
g <- ggplot(dt3[vaccine_name==vaccines[i]], aes(x = factor(vaccine_name), y = percent_change)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)
print(g)
}
dt3[,outlier:=ifelse(is_outlier(percent_change), location_name, as.numeric(NA)), by=.(vaccine_name)]
for (i in 1:length(vaccines)) {
g <- ggplot(dt3[vaccine_name==vaccines[i]], aes(x = vaccine_name, y = percent_change)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)
print(g)
}
# Author: Francisco Rios
# Purpose: Set up R for prepping UW PHI Vaccination Data
# Date: Last modified July 12, 2021
# Manually set the working directory
###############################
# load required packages
###############################
library(data.table)
library(ggplot2)
library(readxl)
library(GGally)
library(dplyr)
library(tibble)
###############################
# important variables
###############################
shared_data_dir <- "G:/.shortcut-targets-by-id/1P7ITMVB9x01fuYfHW8-uWogw4SpbuvwO/Merck Vaccine Improvement Index Project/Data/"
local_data_dir <- "G:/My Drive/PHI/local_data/"
prepped_data_dir <- "G:/My Drive/PHI/local_data/prepped_data/"
code_dir <- "./"
codebook_directory <- paste0(local_data_dir,"/codebooks/")
visDir <- paste0("G:/My Drive/PHI/visualizations/")
###############################
# output files
###############################
outputFile2a = paste0(prepped_data_dir, "2a_vaccine_trends.RDS")
outputFile2b = paste0(prepped_data_dir, "2b_sdi.RDS")
outputFile2c = paste0(prepped_data_dir, "2c_disease_trends.RDS")
outputFile3 = paste0(prepped_data_dir, "3a_merged_data.RDS")
outputFile4 = paste0(visDir, "aim1_sample_visualizations.PDF")
outputFile4b = paste0(visDir, "aim1_sample_country_trends.PDF")
###############################
# source shared functions
###############################
source(paste0(code_dir, "functions/", "prep_vax_trend_data.R"))
source(paste0(code_dir, "functions/", "prep_dx_trend_data.R"))
source(paste0(code_dir, "functions/", "strip_chars.R"), encoding = "UTF-8")
# Author: Francisco Rios
# Purpose: calculate observed percent change for all countries and locations
# Date: Last modified July 13, 2021
# load data
data = readRDS(outputFile3)
# subset data to include only values of Vaccine coverage between 2014-2019
dt2 <- data[year_id %in% c('2014', '2019')]
# subset to only low-SDI countries
dt2 <- dt2[sdi_group=="low"]
# # temporary fix remove the unnecessary columns
dt2 <- dt2[,c("location_name", "year_id", "vaccine_name", "val")]
# reshape data from long to wide
dt3 <- dcast(dt2, location_name + vaccine_name ~ year_id, value.var = c("val"))
# calculate percent change for each country
dt3[, percent_change := ((`2019`-`2014`)/`2014`)*100]
# remove locations without a real number
dt3 <- dt3[!is.na(percent_change)]
dt3 <- dt3[!is.infinite(percent_change)]
# create a function to spot outliers in data
is_outlier <- function(x) {
return(x > quantile(x, 0.75) + 1.5 * IQR(x))
}
vaccines = unique(dt3$vaccine_name)
dt3[,outlier:=ifelse(is_outlier(percent_change), location_name, as.numeric(NA)), by=.(vaccine_name)]
for (i in 1:length(vaccines)) {
g <- ggplot(dt3[vaccine_name==vaccines[i]], aes(x = vaccine_name, y = percent_change)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
theme_minimal
print(g)
}
# Author: Francisco Rios
# Purpose: calculate observed percent change for all countries and locations
# Date: Last modified July 13, 2021
# load data
data = readRDS(outputFile3)
# subset data to include only values of Vaccine coverage between 2014-2019
dt2 <- data[year_id %in% c('2014', '2019')]
# subset to only low-SDI countries
dt2 <- dt2[sdi_group=="low"]
# # temporary fix remove the unnecessary columns
dt2 <- dt2[,c("location_name", "year_id", "vaccine_name", "val")]
# reshape data from long to wide
dt3 <- dcast(dt2, location_name + vaccine_name ~ year_id, value.var = c("val"))
# calculate percent change for each country
dt3[, percent_change := ((`2019`-`2014`)/`2014`)*100]
# remove locations without a real number
dt3 <- dt3[!is.na(percent_change)]
dt3 <- dt3[!is.infinite(percent_change)]
# create a function to spot outliers in data
is_outlier <- function(x) {
return(x > quantile(x, 0.75) + 1.5 * IQR(x))
}
vaccines = unique(dt3$vaccine_name)
dt3[,outlier:=ifelse(is_outlier(percent_change), location_name, as.numeric(NA)), by=.(vaccine_name)]
for (i in 1:length(vaccines)) {
g <- ggplot(dt3[vaccine_name==vaccines[i]], aes(x = vaccine_name, y = percent_change)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
theme_minimal()
print(g)
}
outputFile5a = paste0(visDir, "aim1_exemplars.PDF")
# Save file
print(paste('Saving:', outputFile5a))
pdf(outputFile4b, height=5.5, width=9)
for (i in 1:length(vaccines)) {
g <- ggplot(dt3[vaccine_name==vaccines[i]], aes(x = vaccine_name, y = percent_change)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
theme_minimal()
print(g)
}
dev.off()
# Save file
print(paste('Saving:', outputFile5a))
pdf(outputFile5a, height=5.5, width=9)
for (i in 1:length(vaccines)) {
g <- ggplot(dt3[vaccine_name==vaccines[i]], aes(x = vaccine_name, y = percent_change)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
theme_minimal()
print(g)
}
dev.off()
library(ggrepel)
library(ggrepel)
# Save file
print(paste('Saving:', outputFile5a))
pdf(outputFile5a, height=5.5, width=9)
for (i in 1:length(vaccines)) {
g <- ggplot(dt3[vaccine_name==vaccines[i]], aes(x = vaccine_name, y = percent_change)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
theme_minimal()+
geom_text_repel()
print(g)
}
dev.off()
# Save file
print(paste('Saving:', outputFile5a))
pdf(outputFile5a, height=5.5, width=9)
for (i in 1:length(vaccines)) {
g <- ggplot(dt3[vaccine_name==vaccines[i]], aes(x = vaccine_name, y = percent_change)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
theme_minimal()+
geom_text_repel(aes(label = outlier))
print(g)
}
dev.off()
# Save file
print(paste('Saving:', outputFile5a))
pdf(outputFile5a, height=5.5, width=9)
for (i in 1:length(vaccines)) {
g <- ggplot(dt3[vaccine_name==vaccines[i]], aes(x = vaccine_name, y = percent_change)) +
geom_boxplot() +
# geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
theme_minimal()+
geom_text_repel(aes(label = outlier))
print(g)
}
dev.off()
# # plot two values against each other
# plot(dt3$val_2014, dt3$val_2019)
# ggplot(dt3, aes(x=val_2014, y=val_2019, color=vaccine_name)) +
#   geom_point()+
#   facet_wrap(~vaccine_name) +
# # label points above a certain point
#   geom_text(aes(label=ifelse(val_2019>.75 & val_2014<0.75,as.character(location_name),'')),hjust=0,vjust=0)
#
# # make table among low SDI countries
# # ggplot(dt3, aes(location_name, vaccine_name, color = vaccine_name, size= percent_change)) + geom_point() + theme_classic()
ggplot(dt3, aes(vaccine_name, location_name, fill= percent_change)) + geom_tile() + theme_bw()
View(dt3)
